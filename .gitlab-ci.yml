variables:
  PROJECT_NAME: "miniSinaV1"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  JAVA_VERSION: "17.0.12"
  MAVEN_VERSION: "3.8.5"
  SPRING_BOOT_VERSION: "3.3.4"

stages:
  - check
  - build
  - deploy

check_runner:
  stage: check
  script:
    - echo "=== Sistema Operativo ==="
    - uname -a
    - echo "=== Docker ==="
    - docker --version || echo "Docker no está instalado"
    - echo "=== Java ==="
    - java -version || echo "Java no está instalado"
    - echo "=== Maven ==="
    - mvn -v || echo "Maven no está instalado"
    - echo "=== Git ==="
    - git --version || echo "Git no está instalado"
    - echo "=== Docker Compose ==="
    - docker-compose --version || echo "Docker Compose no está instalado"
    - echo "=== Espacio en Disco ==="
    - df -h
    - echo "=== Variables de Entorno ==="
    - printenv

  only:
    - featureCICD
    - main
  tags:
    - bootcamp

build:
  stage: build
  script:
    - docker info
    - docker-compose -f docker-compose.yml build --no-cache
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
      - target/classes/application-prod.properties
      - target/classes/application.properties
    expire_in: 1 day
  only:
    - main
    - featureCICD
  tags:
    - bootcamp

deploy:
  stage: deploy
  script:
    - docker-compose -f docker-compose.yml pull
    - docker-compose -f docker-compose.yml up -d
    - docker ps
    # Esperar unos segundos para que la aplicación arranque
    - sleep 10
    # Capturar y mostrar los logs de la aplicación
    - docker-compose -f docker-compose.yml logs custom_app

  only:
    - main
    - featureCICD
  environment:
    name: production
  tags:
    - bootcamp
  artifacts:
    when: always
    paths:
      - app.log
    expire_in: 1 day
